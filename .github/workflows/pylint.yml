name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint

    - name: Run Pylint and save output
      run: |
        pylint $(git ls-files '*.py') > pylint-report.txt || true

    - name: Parse Pylint score
      id: pylint-score
      run: |
        score=$(tail -n 1 pylint-report.txt | grep -oP '(?<=rated at )[0-9\.]+')
        echo "score=${score}" >> $GITHUB_ENV
        echo "score=${score}" # Output the score for debugging

    - name: Determine badge color
      id: determine-color
      run: |
        score=$(echo ${{ env.score }})
        if (( $(echo "$score > 8" | bc -l) )); then
          color="brightgreen"
        elif (( $(echo "$score > 6" | bc -l) )); then
          color="yellow"
        else
          color="red"
        fi
        echo "color=$color" >> $GITHUB_ENV
        echo "color=$color" # Output the color for debugging
        
    - name: Move and Commit Badge
      run: |
        mkdir -p badges
        mv pylint-badge.svg badges/
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add badges/pylint-badge.svg
        git commit -m "Update Pylint badge"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_COMMIT_TOKEN }}
